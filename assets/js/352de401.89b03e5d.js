"use strict";(self.webpackChunkwortfokus=self.webpackChunkwortfokus||[]).push([[9247],{6228:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"projects/project-quiz/backend/admin-rolebinding","title":"\ud83d\udee1\ufe0f Rollenverwaltung f\xfcr Admin- und User-Frontend in .NET mit Firebase","description":"Dieses Dokument erkl\xe4rt, wie man in einer Quiz-Webseite User (spielen) und Admin (Quizzes erstellen/bearbeiten) trennt.","source":"@site/docs/projects/project-quiz/backend/admin-rolebinding.md","sourceDirName":"projects/project-quiz/backend","slug":"/projects/project-quiz/backend/admin-rolebinding","permalink":"/docs/projects/project-quiz/backend/admin-rolebinding","draft":false,"unlisted":false,"editUrl":"https://github.com/Wortfokus/documentation/tree/main/docs/projects/project-quiz/backend/admin-rolebinding.md","tags":[],"version":"current","frontMatter":{}}');var r=i(4848),s=i(8453);const o={},d="\ud83d\udee1\ufe0f Rollenverwaltung f\xfcr Admin- und User-Frontend in .NET mit Firebase",a={},l=[{value:"1. Firebase Setup",id:"1-firebase-setup",level:2},{value:"Admin-Claim setzen (einmalig, serverseitig)",id:"admin-claim-setzen-einmalig-serverseitig",level:3},{value:"2. .NET Setup",id:"2-net-setup",level:2},{value:"3. Controller-Absicherung",id:"3-controller-absicherung",level:2},{value:"4. Frontend-Trennung",id:"4-frontend-trennung",level:2},{value:"5. Best Practices",id:"5-best-practices",level:2}];function u(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\ufe0f-rollenverwaltung-f\xfcr-admin--und-user-frontend-in-net-mit-firebase",children:"\ud83d\udee1\ufe0f Rollenverwaltung f\xfcr Admin- und User-Frontend in .NET mit Firebase"})}),"\n",(0,r.jsxs)(n.p,{children:["Dieses Dokument erkl\xe4rt, wie man in einer Quiz-Webseite ",(0,r.jsx)(n.strong,{children:"User"})," (spielen) und ",(0,r.jsx)(n.strong,{children:"Admin"})," (Quizzes erstellen/bearbeiten) trennt.",(0,r.jsx)(n.br,{}),"\n","Das erfolgt mit ",(0,r.jsx)(n.strong,{children:"Firebase Authentication + Custom Claims"})," und einem ",(0,r.jsx)(n.strong,{children:"einzigen Backend"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-firebase-setup",children:"1. Firebase Setup"}),"\n",(0,r.jsx)(n.h3,{id:"admin-claim-setzen-einmalig-serverseitig",children:"Admin-Claim setzen (einmalig, serverseitig)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'// Beispiel mit Firebase Admin SDK\nconst admin = require("firebase-admin");\n\nadmin.auth().setCustomUserClaims(uid, { admin: true });\n'})}),"\n",(0,r.jsx)(n.p,{children:"Ab jetzt hat der User ein admin: true Claim im JWT."}),"\n",(0,r.jsx)(n.h2,{id:"2-net-setup",children:"2. .NET Setup"}),"\n",(0,r.jsx)(n.p,{children:"Authentication konfigurieren (Program.cs)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cs",children:'using Microsoft.AspNetCore.Authentication.JwtBearer;\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.IdentityModel.Tokens;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services\n    .AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n    .AddJwtBearer(options =>\n    {\n        options.Authority = "https://securetoken.google.com/YOUR_PROJECT_ID";\n        options.TokenValidationParameters = new TokenValidationParameters\n        {\n            ValidateIssuer = true,\n            ValidIssuer = "https://securetoken.google.com/YOUR_PROJECT_ID",\n            ValidateAudience = true,\n            ValidAudience = "YOUR_PROJECT_ID",\n            ValidateLifetime = true\n        };\n    });\n\nbuilder.Services.AddAuthorization(options =>\n{\n    options.AddPolicy("AdminOnly", policy =>\n        policy.RequireClaim("admin", "true"));\n});\n\nbuilder.Services.AddControllers();\n\nvar app = builder.Build();\n\napp.UseAuthentication();\napp.UseAuthorization();\n\napp.MapControllers();\n\napp.Run();\n'})}),"\n",(0,r.jsx)(n.h2,{id:"3-controller-absicherung",children:"3. Controller-Absicherung"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'using Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Mvc;\n\n[ApiController]\n[Route("api/[controller]")]\npublic class QuizController : ControllerBase\n{\n    // Jeder eingeloggte Nutzer darf Quizzes abrufen\n    [HttpGet("{id}")]\n    [Authorize]\n    public IActionResult GetQuiz(int id)\n    {\n        return Ok($"Quiz {id} geladen");\n    }\n\n    // Nur Admin darf Quizzes erstellen\n    [HttpPost]\n    [Authorize(Policy = "AdminOnly")]\n    public IActionResult CreateQuiz([FromBody] string quizData)\n    {\n        return Ok("Quiz erstellt!");\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"4-frontend-trennung",children:"4. Frontend-Trennung"}),"\n",(0,r.jsx)(n.p,{children:"User-Frontend\nLogin, Quizzes l\xf6sen\nRuft nur die Endpoints ohne AdminOnly-Policy auf\nAdmin-Frontend\nLogin mit Admin-Account\nZeigt zus\xe4tzliche CRUD-Funktionen\nRuft Endpoints mit AdminOnly auf"}),"\n",(0,r.jsx)(n.h2,{id:"5-best-practices",children:"5. Best Practices"}),"\n",(0,r.jsx)(n.p,{children:"Trennung in Frontends (Admin-UI / User-UI), aber nur ein Backend."}),"\n",(0,r.jsx)(n.p,{children:"Autorisation immer im Backend pr\xfcfen, niemals nur im Frontend."}),"\n",(0,r.jsx)(n.p,{children:"Defense-in-Depth: auch Admin-Frontend sollte nur Buttons anzeigen, wenn Token \u2192 admin: true."})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);