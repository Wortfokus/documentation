"use strict";(self.webpackChunkwortfokus=self.webpackChunkwortfokus||[]).push([[7837],{5660:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"reevaluation","metadata":{"permalink":"/documentation/blog/reevaluation","source":"@site/blog/23-09-2025-a-reevaluation.md","title":"Reevaluation","description":"A long time went by since my last blog-post. Since the last publication, some ideas where created and tested.","date":"2025-10-08T08:16:00.000Z","tags":[{"inline":false,"label":"Quiz App","permalink":"/documentation/blog/tags/quizapp","description":"Quizzes for christians"}],"hasTruncateMarker":true,"authors":[{"name":"Adrian Moser","title":"Software Engineer","url":"https://github.com/adimoser","page":{"permalink":"/documentation/blog/authors/all-adrian-moser-articles"},"socials":{"linkedin":"https://www.linkedin.com/in/adrianmoser2000/","github":"https://github.com/Adimoser"},"imageURL":"https://github.com/adimoser.png","key":"adrian"}],"frontMatter":{"slug":"reevaluation","title":"Reevaluation","authors":["adrian"],"tags":["quizapp"]},"unlisted":false,"nextItem":{"title":"Publish Documentation","permalink":"/documentation/blog/publish-documentation"}},"content":"A long time went by since my last blog-post. Since the last publication, some ideas where created and tested.\\nOther ideas where kind of thrown into the trash. Mostly because of timing issues.\\n\\nWe had to think about which tools really make sense and which are not good enough.   \\n(Although I might should at some point just start developing it, instead of only thinking about it. But until now I was looking for Tutorials about Flutter and tried to learn it. More about this later).\\n\\nBut step by step.\\n\x3c!-- truncate --\x3e\\n\\n## School started\\n\\nFirst of all my studies started again. This means that I won\'t have as much time to work on this project as wished anymore.\\nBut the good thing is that I am already in my last semester and I am already very near to finish with a bachelor title in Informatics.\\nBut there remains one big work to do before I can get my degree, and this is my Bachelorthesis.   \\n\\nSo therefore I need to step back a bit with this project, although my vision is still to make an app which can help Christians to understand the bible more with the generated questionsets.  \\n\\nBut still there is some progress going on with my apps.\\n\\n## Authentication + Wortfokus.org\\n\\nAs you might have seen, there is now a authentication implementated in my wordpress-application [Wortfokus.org](https://wortfokus.org)   \\nUsers are now able to login to my webpage and bookmark specific articles. This is right now the only feature accesible on wordpress through the authentication. Further implementation might be coming. If you have an idea of what could be implemented; don\'t hesitate to write me (e.g. mail -> kontakt@wortfokus.org).   \\n\\nAs you might have seen I changed the login to Auth0. The reason for it was that the implementation on my wordpress would have cost me too much. There was a free firebase plugin available, but as soon as you wanted to implement social login, you need to pay for the plugin, which was not my intention. We might think of going to an other platform (e. g. own CMS-version on Github).\\n\\nBut for now Authentication is implemented and the user is now able to stick forward with his account registered.   \\n\\n## Move away from Flutter\\n\\nAlthough Flutter seems to be a fun challenge, it took me to much time to understand it. There might be a future project where I could use Flutter. But for now I am interested in setting up the project relatively fast. Therefore Ionic and Angular seems to be a better fit.   \\nIt might also end up in Ionic and Vue, because Vue seems to have a prettier UI. But this is not fixed until now.   \\nI will have to decide this soon enough, although.   \\n\\n## Future\\n\\nWhat is going on right now?\\n\\nSince I am constantly reevaluating Wordpress (I have to admit it provides many good features), but it is a constant restructuring and search for new ways - I am considering a CMS-solution like [ghost](https://ghost.org/) \\n\\nNext on our list is the start of the implementation. First we need to have an idea about the design of our UI. How to implement it (Angular or Vue) and then our backend.   \\nThe last thing will be the authentification to be implemented. As soon as we get this things, we can start to implement the rest of the application straight forward."},{"id":"publish-documentation","metadata":{"permalink":"/documentation/blog/publish-documentation","source":"@site/blog/30-08-2025-publish-documentation.md","title":"Publish Documentation","description":"Today, I tried to publish this documentation online, with every possible resource and restrictions.","date":"2025-10-08T08:16:00.000Z","tags":[{"inline":false,"label":"Quiz App","permalink":"/documentation/blog/tags/quizapp","description":"Quizzes for christians"},{"inline":false,"label":"Documentation","permalink":"/documentation/blog/tags/documentation","description":"Documentation tag description"}],"hasTruncateMarker":true,"authors":[{"name":"Adrian Moser","title":"Software Engineer","url":"https://github.com/adimoser","page":{"permalink":"/documentation/blog/authors/all-adrian-moser-articles"},"socials":{"linkedin":"https://www.linkedin.com/in/adrianmoser2000/","github":"https://github.com/Adimoser"},"imageURL":"https://github.com/adimoser.png","key":"adrian"}],"frontMatter":{"slug":"publish-documentation","title":"Publish Documentation","authors":["adrian"],"tags":["quizapp","documentation"]},"unlisted":false,"prevItem":{"title":"Reevaluation","permalink":"/documentation/blog/reevaluation"},"nextItem":{"title":"Planning goes on","permalink":"/documentation/blog/planning-goes-on"}},"content":"Today, I tried to publish this documentation online, with every possible resource and restrictions.   \\nThe result was that I am now able to automatically publish my documentation on my [developer-portal](https://developer.wortfokus.org) and people are able to read it.   \\nHave fun!\\n\\n\x3c!--truncate--\x3e\\n\\n# Preparation\\n\\nThe first work which needed to be done was preparing a domain. Since I did not want to buy a new domain, I checked what other projects would do in that case.\\n\\nI found that many have a so-called subdomain on which they publish their documentation. Also multiple applications can be hosted through this way.   \\nI decided to do it the same way and publish my documentation, although not yet fully finished, under a subdomain.   \\n_(It\'s not like the first time I heard about subdomains, but it is kind of the first time to use this possibility.)_\\n\\nFor preparation purposes I organized the subdomain on Ionos. After deciding to stand with Ionos and not change it to an other provider (mainly using Cloudflare as CDN solution), I registered the subdomain on the plattform.   \\nI also added other domain-ending to my existing domain. Since I am mostly working with german articles, I added the domain-endings [.com | .ch | .at ].\\n\\n# Automation\\n\\nSince I use Github as my coding-store, I was also able to implement some automation with Github Actions.   \\nIt is not new to me and I already used Github Actions. But what was new, the deploying part. Until now I only used the CI-part of Github Actions - running tests on pushes and merges.   \\n\\nBut how would deployment work?   \\nLuckily I was not the first one to question this :)   \\nWith some search I found out that you could publish your code quite easily. **If** your Configuration in your Docusaurus works properly together with your deployment-file.\\nAfter running my code multiple times I was able to see the documentation on a github page. But how would I be able to see the result on my subdomain?\\n\\n# Configuration \\n\\nTherefore some more steps needed to be done:\\n1. Github-Workflow-File needs to be correct.\\n   1. Exists in the right folder-structure (.github / workflows / deploy.yml)\\n   2. deploy.yml need to work correctly and result with a build.\\n   3. Check if Github-Actions has all the needed permissions in your settings (you might need to allow gh-pages to make changes).\\n2.  My docusaurus-configuration file needs to have the correct url (and it is not the Github-Page, but rather directly on my subdomain).\\n3.  Set the right settings in my Github-Page Settings.\\n    1.  Source was \\"Deploy from a branch\\" (since I used a prepared way to build - see the last step in my deploy.yml-file)\\n    2.  Select the right branch: gh-pages and take the root (and not docs as I did it in the beginning).\\n    3.  And set the custom-domain (you first need to configure in Ionos something too).\\n4.  Add CNAME in Ionos to point towards my github-page. (It takes maybe some time until it is available).\\n\\n## Tip\\n\\nI had for a long time a big issue that my page was not found. It came because of some mistakes of mine.   \\nFirst I set the wrong domain in my docusaurus-configuration. _(Although I am not sure if this really helped, because as I understand, this configuration is only needed if you publish directly from your codebase.) But what was needed, is that I put my baseUrl to an empty folder and not showing towards a documentation-folder.\\n\\nNext thing I had done wrong, was that I did not select the root-folder in my Github-Page-Settings and rather put docs as the value, which is wrong.\\n\\nAnd in the end, maybe delete your gh-pages branch after a while. Because I did so many commits and run the Action so often, wrong configuration where not always deleted or overwritten, but rather stood in an own file. So maybe the problem is in your gh-pages branch and you cannot see the mistake because everything else is actually fine.\\n\\n# Final\\n\\nAfter everything was finished, I was able to automate the publication of my documentation.   \\nYou might ask yourself now, why was it so important for me to automate the publication of a simple document?   \\nThe reason is simple:  \\nI wanted to get familiar with Github-Actions before my fullstack-application needs to be published.\\n\\nSo now, after every merge to my main branch, I can update my public documentation."},{"id":"planning-goes-on","metadata":{"permalink":"/documentation/blog/planning-goes-on","source":"@site/blog/28-08-2025-planning-goes-on.md","title":"Planning goes on","description":"A little update about the current state of the product. I am still mainly in the planning phase, but I am also certain to be able to start with coding soon. Most of the needed tech-stack is now selected and I could go on working on our application. \ud83d\udcaa","date":"2025-08-28T05:54:20.000Z","tags":[{"inline":false,"label":"Quiz App","permalink":"/documentation/blog/tags/quizapp","description":"Quizzes for christians"},{"inline":false,"label":"Documentation","permalink":"/documentation/blog/tags/documentation","description":"Documentation tag description"}],"hasTruncateMarker":true,"authors":[{"name":"Adrian Moser","title":"Software Engineer","url":"https://github.com/adimoser","page":{"permalink":"/documentation/blog/authors/all-adrian-moser-articles"},"socials":{"linkedin":"https://www.linkedin.com/in/adrianmoser2000/","github":"https://github.com/Adimoser"},"imageURL":"https://github.com/adimoser.png","key":"adrian"}],"frontMatter":{"slug":"planning-goes-on","title":"Planning goes on","authors":["adrian"],"tags":["quizapp","documentation"]},"unlisted":false,"prevItem":{"title":"Publish Documentation","permalink":"/documentation/blog/publish-documentation"},"nextItem":{"title":"Start planning","permalink":"/documentation/blog/first-blog-post"}},"content":"A little update about the current state of the product. I am still mainly in the planning phase, but I am also certain to be able to start with coding soon. Most of the needed tech-stack is now selected and I could go on working on our application. \ud83d\udcaa\\n\\n\x3c!-- truncate --\x3e\\n\\n# Current State\\n\\nAfter many days of planning and thinking how I could come up with the best solution and how I would implement stuff there are still questions open.\\n\\nBut the architect (@adrian) was able to make some progress by coming up with a tech-stack and planning for the future. (I will explain later what the thought process was).\\n\\nIn the mean time new article where written on the main page and also published. Thanks to everyone who reads them and also comments it. I still hope it is a blessing for anyone using it and that people get strengthened in their belief.\\n\\nUntil now nothing was coded and I am still kind of stuck in the planning part. But I am certain that soon enough the important things are planned, so that the engineers (@adrian) \ud83d\ude05 can start working on the application.\\n\\n---\\n\\n## Architectural Planning\\n\\nOn  the planning more things came than first thought. From only thinking about the tech-stack (Flutter, .Net and a Database), I had to think about more stuff. Here some examples:\\n\\n### Authentication\\n\\nHow would the projects implement authentication? I mean, it should somehow cost little to use it, but in the mean time it should also promise enough security. Could I use a self-hosted solution like [KeyCloak](https://www.keycloak.org/) or is [Auth0](https://auth0.com/) a better solution?\\n\\nI ended up with [Firebase](https://firebase.google.com/). Here the thought process:\\n\\nI would love to use a self-hosted solution like already mentioned: [KeyCloak](https://www.keycloak.org/). But right now there is only one developer and I have yet not enough experience to promise a secure authentication if I do it on my own.\\n\\nBut then I could use a third-party solution like [Auth0](https://auth0.com/). It would meet all the needed requirements I had. Those where: I can easily use it in my own coded application. Auth0 provides a SDK for .NET [libraries](https://auth0.com/docs/libraries) and there is also a plugin available to use the login-process on my current Wordpress page. There is only one big issue. It found many comments that it was too expensive. Soon enough I would need to pay a lot of money, for a page which should be actually not cost anything to the users.   \\n\\nThe next product I checked was [SupaBase](https://supabase.com/). It provides an authentication and also a database in the same package. Would be good enough for me. But again, I found comments that it would cost too much and it does not have a direct integration for my Wordpress site.   \\nAnd also I wanted to have an own hosted postgres-solution (managed database), for learning purposes. So it was also a nice solution, but it did not handled all my whishes.\\n\\nThe next product I checked was [Firebase](https://firebase.google.com/). It seems to have a cheap option and is easy to implement with my current techstack. It looks like that there is also a plugin available to use it on wordpress.\\n\\nThis makes Firebase probably the best solution overall. But we need to remember that I did not make any implementation but only used internet resources.\\n\\n### Database\\n\\nThe next problem was which database should I use. I have worked with several kind of databases. From SQL-Databases like [PostgreSQL](https://www.postgresql.org/), to [MongoDB](https://www.mongodb.com/) and a Graph-Databases [Neo4J](https://neo4j.com/). \\nAll of them have their arguments to be used. For example is Neo4J an easy solution to make relations. Document-based MongoDB with his NoSQL features (I know Neo4J also is a NoSQL-Database). And then PostgreSQL with its tables and relations.\\n\\nI personally prefer Neo4J as Database (since I like the way it handles relations). But for my case I had to think about the information I wanted to store and how to set up my database. So I had to put my preferences a bit back...   \\nFirst I was thinking about the most important data really needed.   \\n\\nWhat would it be?\ud83e\udd14   \\nI mean for sure Users need to be stored. And I am building a quiz-application - so questions? And their answers?   \\nSomething else?   \\nOh, yeah in future I have feature I want to implement...\\n\\nAnd what do I need to store there:\\n- Story\\n- Text \\n- Questions between the different texts\\n- Its answers\\n\\nFor the story-feature, the graphical database looks nice.\\nBut what about the questions? How do I store them? And the answers?   \\n\\nAnd as a result, relational databases seemed to be the best solution. (I have to admit, I had to use ChatGPT to convince me, since I would have thought differently).   \\nSo I ended up with PostgreSQL. (For further insights about our decision check also [this page](../docs/projects/project-quiz/architecture/Decisions/adr-001-database-decision))\\n\\n### Further Elements\\n\\nWe already made some further planning and we made some decisions. Although it might get more important when we have a first production-ready solution.   \\n\\nWe for example checked how we could host our fullstack-application and make it available. There it looks like we use a combination of already using solutions and add new ones.    \\nThis means in our case that Wordpress is still used with Ionos, but our other products are hosted in an other way. But we have yet not decided which provider we will use. It was more about the idea if we host everything (Wordpress and Coded Products) on the same host-provider. But it looks like Ionos is the best when using Wordpress and others are better applying DotNet.     \\nBut we will come back to this, as soon as we go into production.\\n\\n---\\n\\nThis was the second blog-article. \ud83d\ude01   \\nI hope you got an idea about what is happening in the background, while planning our application.   \\nIt\'s though, but we should soon enough be able to start coding. We also already prepared some stuff on Github. (Like Project-Board and automatically move Issues on the board)."},{"id":"first-blog-post","metadata":{"permalink":"/documentation/blog/first-blog-post","source":"@site/blog/17-08-2025-start-quizapp.md","title":"Start planning","description":"Today I\'m embarking on a new development journey - creating a quiz application from scratch. This project will help me strengthen my programming skills while building something useful and interactive.","date":"2025-08-17T19:59:28.000Z","tags":[{"inline":false,"label":"Quiz App","permalink":"/documentation/blog/tags/quizapp","description":"Quizzes for christians"}],"hasTruncateMarker":true,"authors":[{"name":"Adrian Moser","title":"Software Engineer","url":"https://github.com/adimoser","page":{"permalink":"/documentation/blog/authors/all-adrian-moser-articles"},"socials":{"linkedin":"https://www.linkedin.com/in/adrianmoser2000/","github":"https://github.com/Adimoser"},"imageURL":"https://github.com/adimoser.png","key":"adrian"}],"frontMatter":{"slug":"first-blog-post","title":"Start planning","authors":["adrian"],"tags":["quizapp"]},"unlisted":false,"prevItem":{"title":"Planning goes on","permalink":"/documentation/blog/planning-goes-on"}},"content":"Today I\'m embarking on a new development journey - creating a quiz application from scratch. This project will help me strengthen my programming skills while building something useful and interactive.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Project Goals\\n- Create a quiz application for christians.\\n- Bring the bible nearer to the bible by letting them solving quizzes.\\n- Find out new things about the bible by enabling new knowledge about the word.\\n- Let friends test their knowledge agains each others.\\n\\n## Initial Planning Phase\\n\\nFor the first phase, I\'ll focus on:\\n\\n1. Defining the core features.\\n2. Selecting the right technology stack.\\n3. Setting up Github as my code base.\\n4. Create the basic project structure.\\n\\nThe idea is to document my journey and also announce new features which where implemented.\\nStay tuned."}]}}')}}]);