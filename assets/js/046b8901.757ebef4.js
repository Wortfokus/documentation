"use strict";(self.webpackChunkwortfokus=self.webpackChunkwortfokus||[]).push([[5127],{875:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"projects/project-quiz/backend/database","title":"Database","description":"As already explained, we will use an SQL-Database to store all the needed information.","source":"@site/docs/projects/project-quiz/backend/database.mdx","sourceDirName":"projects/project-quiz/backend","slug":"/projects/project-quiz/backend/database","permalink":"/docs/projects/project-quiz/backend/database","draft":false,"unlisted":false,"editUrl":"https://github.com/Wortfokus/documentation/tree/main/docs/projects/project-quiz/backend/database.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidabar_label":"Database"}}');var s=n(4848),a=n(8453);const o=n.p+"assets/images/quizdatabase-18a75c081019e2332c779b72c0e63788.png",r={sidebar_position:3,sidabar_label:"Database"},l="Database",h={},d=[{value:"Shema",id:"shema",level:2},{value:"Story",id:"story",level:3},{value:"Question",id:"question",level:3},{value:"Game",id:"game",level:3},{value:"Friend",id:"friend",level:3},{value:"User",id:"user",level:3}];function c(e){const t={h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"database",children:"Database"})}),"\n",(0,s.jsx)(t.p,{children:"As already explained, we will use an SQL-Database to store all the needed information."}),"\n",(0,s.jsx)(t.p,{children:"On this page we will provide a small diagram with all the elements we think that are needed to organize our database. This especially means the tables we want to use and have to query later.\nIf you miss any information in the database, feel free to ask for further information."}),"\n",(0,s.jsx)(t.h2,{id:"shema",children:"Shema"}),"\n",(0,s.jsx)(t.p,{children:"This is the schema of our database:"}),"\n",(0,s.jsx)("img",{src:o,alt:"Database Schema",style:{minWidth:700}}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:"It might look a bit difficult at the beginning, therefore here some explanation.\nWe do not go further into the attributes, since does can change over the times."}),"\n",(0,s.jsx)(t.p,{children:"Most of the relationship should already be set."}),"\n",(0,s.jsx)(t.h3,{id:"story",children:"Story"}),"\n",(0,s.jsx)(t.p,{children:"The components of the stories are:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Story -> This is the main table for the stories. It contains the id, title and description of the story."}),"\n",(0,s.jsx)(t.li,{children:"Content -> This table contains the content of the story. It is linked to the story via the story_id."}),"\n",(0,s.jsx)(t.li,{children:"Element -> This table contains the elements of a content. It is linked to the content via the content_id."}),"\n",(0,s.jsx)(t.li,{children:"Story_Question -> This table links the Elements to the Questions. It is linked to the element via the element_id and to the question via the question_id."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"So basically the idea is that a story can have multiple contents, a content can have multiple elements and an element can be different kinds of elements, one of them is a question."}),"\n",(0,s.jsx)(t.p,{children:"We add a table Progress to track the progress of a user in a story."}),"\n",(0,s.jsx)(t.h3,{id:"question",children:"Question"}),"\n",(0,s.jsx)(t.p,{children:"The components of the questions are:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Question -> This is the main table for the questions. It contains the id, type (e.g. multiselect) and translations of the question."}),"\n",(0,s.jsx)(t.li,{children:"Answer -> This table contains the answers of a question. It is linked to the question via the question_id. And also holds different languages."}),"\n",(0,s.jsx)(t.li,{children:"Question_Set -> This table contains the question sets. A question set is a collection of questions that can be used in a game."}),"\n",(0,s.jsx)(t.li,{children:"Quiz_questions -> This table links the Question_Set to the Questions. It is linked to the question_set via the question_set_id and to the question via the question_id."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"game",children:"Game"}),"\n",(0,s.jsx)(t.p,{children:"Most of the information about a game are not stored in the database, since they are only needed during the game and not after.\nBut since we might want to have statistics about the games played, we store some information, in their own tables. But this can be added later."}),"\n",(0,s.jsx)(t.p,{children:"The components of the game are:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Game_Results -> This table contains the results of a game. It is linked to the user via the user_id and to the game via the game_id."}),"\n",(0,s.jsx)(t.li,{children:"Question_Results -> This table contains the results of a question in a game. It is linked to the user via the user_id, and to the question via the question_id."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"friend",children:"Friend"}),"\n",(0,s.jsx)(t.p,{children:"We have an own table for the friends, since we want to allow users to add friends and play against them."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Friend -> This table contains the friends of a user. It is linked to the user via the user_id and to the friend via the friend_id."}),"\n",(0,s.jsx)(t.li,{children:"Community (Optional) -> This table contains the communities of a user. It is linked to the user via the user_id and to the community via the community_id."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"user",children:"User"}),"\n",(0,s.jsx)(t.p,{children:"This is the main table and contains the users of the application."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"User -> This table contains the users of the application. It contains the id, name, email and other information of the user."}),"\n",(0,s.jsx)(t.li,{children:"Role -> This table contains the roles of a user. It is linked to the user via the user_id and to the role via the role_id."}),"\n",(0,s.jsx)(t.li,{children:"User_Role -> This table links the User to the Role. It is linked to the"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);